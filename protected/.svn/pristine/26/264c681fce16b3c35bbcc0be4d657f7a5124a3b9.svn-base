<?php

class SmsManager {

    public function sendSms() {
        
    }

    public function sendSmsTemplate($to, $values, $templateId) {
        return $this->sendSmsTemplateViaYunTongXun($to, $values, $templateId);
    }

   
    // Send verifing sms to user's mobile when user registers.
    /**
     * 
     * @param type $to mobile number.
     * @param type $code  verify code.
     * @param type $expiry  expiry duration, eg 10 minutes.
     * @return array of errors or empty array if it is success.
     */
    public function sendVerifyUserRegisterSms($to, $code, $expiry) {
        $templateId = '25322';  //template id, from 云通讯.
        $values = array($code, $expiry);
        return $this->sendSmsTemplateViaYunTongXun($to, $values, $templateId);
    }

    protected function sendSmsTemplateViaYunTongXun($to, $values, $templateId) {
        require_once("./protected/sdk/yuntongxun/yuntongxun.config.php");
        //require_once("./protected/sdk/yuntongxun/yuntongxun.test.php");
        require_once("./protected/sdk/yuntongxun/CCPRestSmsSDK.php");
        //$ytxConfig from yuntongxun.config.php.

        $rest = new REST($ytxConfig['serverIP'], $ytxConfig['serverPort'], $ytxConfig['softVersion']);
        $rest->setAccount($ytxConfig['accountSid'], $ytxConfig['accountToken']);
        $rest->setAppId($ytxConfig['appId']);
        $ret = $rest->sendTemplateSMS($to, $values, $templateId);   //returns a SimpleXMLElement object.
        $errors = array();
        if (is_null($ret)) {
            // Null return.
            $errors[] = 'No response from vendor.';
        } else if ($ret->statusCode != 0) {
            // Error.           
            $msg = strval($ret->statusMsg);
            $code = strval($ret->statusCode);
            $errors[$code] = $msg;
        } else {
            // Success.            
        }
        return $errors;
    }

}
