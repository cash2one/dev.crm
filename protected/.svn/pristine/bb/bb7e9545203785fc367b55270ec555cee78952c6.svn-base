<?php

class TripController extends AdminController {
    const ACTION_APPROVE=1;
    const ACTION_DISAPPROVE=2;
    /**
     * @var string the default layout for the views. Defaults to '//layouts/column2', meaning
     * using two-column layout. See 'protected/views/layouts/column2.php'.
     */
    //public $layout = '//layouts/column2';

    /**
     * @return array action filters
     */
    public function filters() {
        return array(
            'accessControl', // perform access control for CRUD operations
            'postOnly + delete xapprove disapprove', // we only allow deletion via POST request
        );
    }

    /**
     * Specifies the access control rules.
     * This method is used by the 'accessControl' filter.
     * @return array access control rules
     */
    public function accessRules() {
        return array(
            array('allow', // allow authenticated user to perform 'create' and 'update' actions
                'actions' => array('approve', 'disapprove', 'view', 'index'),
                'users' => array('@'),
            ),
            array('deny', // deny all users
                'users' => array('*'),
            ),
        );
    }

    /**
     * Displays a particular model.
     * @param integer $id the ID of the model to be displayed
     */
    public function actionView($id) {
        $tripMgr = new TripManager();
        $itrip = $tripMgr->loadInterfaceModel($id, array('tripCreator', 'tripDetail', 'tripImages'));

        $this->render('view', array(
            'model' => $itrip
        ));
    }

    /**
     * Lists all models.
     */
    public function actionIndex() {

        $dataProvider = new CActiveDataProvider('ITrip', array(
                    'criteria' => array(
                        'condition' => 't.date_deleted is NULL and is_published=1',
                    ),
                    'pagination' => array(
                        'pageSize' => 20,
                    ),
                ));
        $this->render('index', array(
            'dataProvider' => $dataProvider,
        ));
    }

    /**
     * Manages all models.
     */
    public function actionAdmin() {
        $model = new Trip('search');
        $model->unsetAttributes();  // clear any default values
        if (isset($_GET['Trip']))
            $model->attributes = $_GET['Trip'];

        $this->render('admin', array(
            'model' => $model,
        ));
    }

    public function actionApprove() {

        if (isset($_POST['id']) && isset($_POST['action'])) {
            $userId = $this->getCurrentUserId();
            $id = $_POST['id'];
            $action = $_POST['action']; //either do approve or disapprove.
            $tripMgr = new TripManager();
            $trip = $tripMgr->loadTripModelById($id);
            $success = false;
            $ret = array();
            if (isset($trip)) {
                if ($action == self::ACTION_APPROVE) {
                    $success = $tripMgr->doApproveTrip($trip, $userId);
                } else if ($action == self::ACTION_DISAPPROVE) {
                    $success = $tripMgr->doDisapproveTrip($trip, $userId);
                } else {
                    $trip->addError('error', 'Unknown action');
                }
            }
            if ($success) {
                $ret['s'] = 'success';
            } else {
                $ret['s'] = 'error';
                $ret['msg'] = $trip->getError('error');
            }
            $this->renderJsonOutput($ret);
        }
    }

    /**
     * Returns the data model based on the primary key given in the GET variable.
     * If the data model is not found, an HTTP exception will be raised.
     * @param integer $id the ID of the model to be loaded
     * @return Trip the loaded model
     * @throws CHttpException
     */
    public function loadModel($id) {
        $model = Trip::model()->findByPk($id);
        if ($model === null)
            throw new CHttpException(404, 'The requested page does not exist.');
        return $model;
    }

    public function loadMenu() {
        $this->menu = array(
            array('label' => 'List Trip', 'url' => array('index')),
        );
    }

    /**
     * Performs the AJAX validation.
     * @param Trip $model the model to be validated
     */
    protected function performAjaxValidation($model) {
        if (isset($_POST['ajax']) && $_POST['ajax'] === 'trip-form') {
            echo CActiveForm::validate($model);
            Yii::app()->end();
        }
    }

}

