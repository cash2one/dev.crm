<?php

class HospitalManager {

    public function createHospital(HospitalForm $form) {
        if ($form->validate()) {
            $model = new Hospital();
            $model->attributes = $form->attributes;

            if ($model->save() === false) {
                $form->addErrors($model->getErrors());
            } else {
                $form->id = $model->id;
            }
        }
        return ($form->hasErrors() === false);
    }

    public function updateHospital(HospitalForm $form) {
        if ($form->validate()) {
            $model = $this->loadHospital($form->id);

            $model->attributes = $form->attributes;

            if ($model->save() === false) {
                $form->addErrors($model->getErrors());
            }
        }
        return ($form->hasErrors() === false);
    }

    public function deleteHospital(Hospital $model) {
        // HospitalFacultyJoin.
        HospitalFacultyJoin::model()->deleteAllByAttributes(array('hospital_id' => $model->id));

        // Hospital.
        $model->delete();

        return ($model->hasErrors() === false);
    }

    public function loadIHospitalsByCity($city = null) {
        $output = array();
        // get location city.
        $regionMgr = new RegionManager();
        $icity = $regionMgr->loadILocationCity($city);
        $output['location']['city'] = $icity;

        // get hospitals by city.
        $criteria = new CDbCriteria();
        $criteria->addCondition("t.date_deleted is NULL");
        $criteria->compare("t.show", "1");
        // Get all by city_id.
        if (isset($city)) {
            $criteria->compare("city_id", $city);
        }
        $criteria->order = "t.name ASC";
        $criteria->select = "t.id, t.name, t.short_name, t.class, t.type, t.city_id, t.phone, t.address, t.website";
        //$criteria->with = array("hospitalDepartments", "hospitalCity");
        $criteria->with = array("hospitalDepartments");
        $hospitals = Hospital::model()->findAll($criteria);
        if (arrayNotEmpty($hospitals)) {
            foreach ($hospitals as $hospital) {
                // unset "hospitalCity" relation, to avoid lazy loading.
                $hospital->hospitalCity = null;
                // create IHospital.
                $ihospital = new IHospital();
                $ihospital->initModel($hospital);
                // 医院相关联的科室
                $depts = $hospital->getDepartments();
                $ihospital->addHospitalDepartments($depts);
                $output['hospitals'][] = $ihospital;
            }
        }

        return $output;
    }

    public function loadIHospitalJson($id, $fid = null) {
        $ihospital = $this->loadIHospital($id, $fid);
        if (is_null($ihospital)) {
            return null;
        } else {
            return array('hospital' => $ihospital);
        }
    }

    public function loadIHospital($id, $fid = null) {
        if (isset($fid)) {
            $join = FacultyHospitalJoin::model()->getByFacultyIdAndHospitalId($fid, $id, array('hospital'));
            if (is_null($join) || is_null($join->hospital)) {
                return null;
            } else {
                $hospital = $join->hospital;
                $ihospital = new IHospital();
                $ihospital->initModel($hospital);
                $ihospital->facultyDesc = $join->getDescription();
                // Add HospitalDepartments
                $depts = $hospital->getDepartments();
                $ihospital->addHospitalDepartments($depts);

                return $ihospital;
            }
        } else {
            $hospital = $this->loadHospital($id, array("hospitalDepartments", 'hospitalCity'));

            $ihospital = new IHospital();
            $ihospital->initModel($hospital);
            // Add HospitalDepartments
            $depts = $hospital->getDepartments();
            $ihospital->addHospitalDepartments($depts);

            return $ihospital;
        }
    }

    public function loadHospital($id, $with = array()) {
        $model = Hospital::model()->getById($id, $with);
        if ($model === null)
            throw new CHttpException(404, 'Not found.');
        return $model;
    }

}
