<?php

class ExpertTeamManager {

    public function testLoad($id, $with = null) {
        $model = ExpertTeam::model()->getById($id, $with);
    }

    public function loadAllIExperTeamsByCityJson($cityId = null, $options = null) {
        $teams = $this->loadAllIExpertTeamsByCity($cityId, $options);
        $output['expertTeams'] = $teams;

        return $output;
    }

    public function loadAllIExpertTeamsByCity($cityId = null, $options = null) {
        $output = array();
        $with = array('expteamLeader', 'expteamHospital', 'expteamHpDept');
        $teamList = $this->loadAllExpertTeamsByCity($cityId, $with, $options);
        if (arrayNotEmpty($teamList)) {
            foreach ($teamList as $team) {
                $output[] = $this->convertToIExpertTeam($team, $with);
            }
        }
        return $output;
    }

    public function loadAllExpertTeamsByCity($cityId = null, $with = null, $options = null) {
        if (is_null($cityId)) {
            return ExpertTeam::model()->getAll($with, $options);
        } else {
            return ExpertTeam::model()->getAllByCityId($cityId, $with, $options);
        }
    }

    public function loadIExpertTeamJson($id) {
        $output = $this->loadIExpertTeamById($id);
        if (is_null($output)) {
            return null;
        } else {
            return array('expertTeam' => $output);
        }
    }

    public function loadIExpertTeamById($id, $with = null) {
        if (is_null($with)) {
            $with = array('expteamHospital', 'expteamLeader', 'expteamFaculty', 'expteamHpDept', 'expteamMembers', 'expteamCity');
        }
        $model = $this->loadTeamById($id, $with);
        if (isset($model)) {
            $iteam = new IExpertTeam();
            $iteam->initModel($model);
            return $iteam;
        } else {
            return null;
        }
    }

    public function loadTeamById($id, $with = null) {
        $model = ExpertTeam::model()->getById($id, $with);
        if (is_null($model)) {
            throw new CHttpException(404, 'Record is not found.');
        }
        return $model;
    }

    public function loadTeamByCode($code, $with = null) {
        $model = ExpertTeam::model()->getByCode($code, $with);
        if (is_null($model)) {
            throw new CHttpException(404, 'Record is not found.');
        }
        return $model;
    }

    // loads all teams belonging to given faculty.
    public function loadTeamsByFacultyId($fid, $with = null, $options = null) {
        if (is_null($with)) {
            $with = array('expteamHospital', 'expteamLeader', 'expteamFaculty', 'expteamHpDept', 'expteamMembers', 'expteamCity');
        }
        return ExpertTeam::model()->getAllByFacultyId($fid, $with, $options);
    }

    // loads only ONE team belonging to given faculty.
    public function loadTeamByFacultyId($fid) {
        $model = ExpertTeam::model()->getByFacultyId($fid, $with);
        if (is_null($model)) {
            throw new CHttpException(404, 'Record is not found.');
        }
        return $model;
    }

    // loads all teams belonging to given city
    public function loadTeamsByCityId($cityId, $with = null, $options = null) {
        if (is_null($with)) {
            $with = array('expteamHospital', 'expteamLeader', 'expteamFaculty', 'expteamHpDept', 'expteamMembers', 'expteamCity');
        }
        return ExpertTeam::model()->getAllByCityId($cityId, $with, $options);
    }

    public function convertToIExpertTeam(ExpertTeam $model) {
        if (isset($model)) {
            $imodel = new IExpertTeam();
            $imodel->initModel($model);
            return $imodel;
        } else {
            return null;
        }
    }

}
