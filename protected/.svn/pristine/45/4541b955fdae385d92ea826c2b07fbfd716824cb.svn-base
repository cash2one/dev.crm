<?php

class UserSearch extends ESearchModel {

    public function __construct($searchInputs, $with = null) {
        parent::__construct($searchInputs, $with);
        //$this->setSelect('t.username, t.role, t.last_login_time,  t.date_created');
        $this->setSelectFields(array('username', 'role', 'last_login_time', 'date_created'));
    }

    public function model() {
        $this->model = new User();
    }

    public function getQueryFields() {
        return array('name', 'mobile', 'role', 'gender', 'hpName', 'hpDeptName', 'cTitle', 'mTitle', 'state', 'city', 'isContracted', 'isVerified');
    }

    public function addQueryConditions() {
        $this->criteria->addCondition('t.date_deleted is NULL');

        if ($this->hasQueryParams()) {
            if (isset($this->queryParams['mobile'])) {
                $mobile = $this->queryParams['mobile'];
                $this->criteria->compare('t.username', $mobile);
            }
            // 搜索 UserDoctorProfile,  当User.role=2
            if (isset($this->queryParams['role']) && $this->queryParams['role'] == StatCode::USER_ROLE_DOCTOR) {
                //$this->criteria->join .= 'left join user_doctor_profile udp on (t.`id`=udp.`user_id`)';
                $udpAlias = 'udp';
                $this->criteria->with = array('userDoctorProfile' => array('alias' => $udpAlias));
                $this->criteria->distinct = true;
                if (isset($this->queryParams['name'])) {
                    $name = $this->queryParams['name'];
                    $this->criteria->compare($udpAlias . ".name", $name, true);
                }
                if (isset($this->queryParams['cTitle'])) {
                    $clinicalTitle = $this->queryParams['cTitle'];
                    $this->criteria->compare($udpAlias . ".clinical_title", $clinicalTitle);
                }
                if (isset($this->queryParams['hpName'])) {
                    $hpName = $this->queryParams['hpName'];
                    $this->criteria->compare($udpAlias . ".hospital_name", $hpName, true); // sql like condition
                }
                if (isset($this->queryParams['hpDeptName'])) {
                    $hpDeptName = $this->queryParams['hpDeptName'];
                    $this->criteria->compare($udpAlias . ".hp_dept_name", $hpDeptName, true); // sql like condition
                }
                if (isset($this->queryParams['isContracted']) && $this->queryParams['isContracted'] == 1) {
                    $this->addCondition($udpAlias . '.date_contacted IS NOT NULL');
                }
                // City.
                /*
                  if (isset($this->queryParams['city'])) {
                  $cityId = $this->queryParams['city'];
                  $this->criteria->compare('t.city_id', $cityId);
                  }
                  // Disease.
                  if (isset($this->queryParams['disease'])) {
                  $diseaseId = $this->queryParams['disease'];
                  $this->criteria->join .= 'left join disease_doctor_join ddj on (t.`id`=ddj.`doctor_id`)';
                  $this->criteria->compare("ddj.disease_id", $diseaseId);
                  $this->criteria->distinct = true;
                  }
                  if (isset($this->queryParams['hospital'])) {
                  $hospitalId = $this->queryParams['hospital'];
                  $this->criteria->compare("t.hospital_id", $hospitalId);
                  }
                  if (isset($this->queryParams['hpdept'])) {
                  $hpdeptId = $this->queryParams['hpdept'];
                  $this->criteria->join .= 'left join hospital_dept_doctor_join hddj on (t.`id`=hddj.`doctor_id`)';
                  $this->criteria->compare("hddj.hp_dept_id", $hpdeptId);
                  $this->criteria->distinct = true;
                  }
                 * 
                 */
            }
        }
    }

}
