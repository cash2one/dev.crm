<?php

class PaymentController extends WebsiteController {

    public function actionDopay() {
        $output = array('status' => 'no');
        try {
            $post = json_decode(file_get_contents('php://input'), true);
            if (isset($post['ref_no'])) {
                $refNo = $post['ref_no'];
            }
            
            // do ping++ request.
            
            // echo ping++ return data from request. // \Pingpp\Charge::create();
            
        } catch (\Pingpp\Error\Base $e) {
            header('Status: ' . $e->getHttpStatus());
            echo($e->getHttpBody());
        } catch (CDbException $cdbex) {
            $output['errorMsg']='error loading data';
        } catch (CException $cex) {
            $output['errorMsg']='error loading data';
        }
        $this->renderJsonOutput();
        // var_dump($input_data);
    }

    /*
      public function actionDoPay() {
      if (isset($_POST['order'])) {
      $values = $_POST['order'];
      if(isset($values['ref_no'])===false){
      //exception.
      }
      $refNo = $values['ref_no'];
      //$orderMgr = // loadSalesOrderByRefNo($refNo);
      if(isset($order)===false){
      // exception.
      }
      // create sales payment from order.
      $paymentMgr


      }
      if (isset($_POST['MedicalRecordBooking']['id'])) {
      $values = $_POST['MedicalRecordBooking'];
      //TODO: add pay_method in $_POST.
      $bookingId = filter_var($values['id'], FILTER_VALIDATE_INT);
      if ($bookingId === false || is_null($bookingId)) {
      // id is not integer.
      echo CJSON::encode(array('status' => 'false', 'error' => 'Wrong id'));
      } else {
      $mrMgr = new MedicalRecordManager();
      // throws CHttpException.
      $mrBooking = $mrMgr->loadMedicalRecordBooking($bookingId);
      $payMethod = 1; // Alipay - create_direct_pay_by_user.
      $paymentMgr = new PaymentManager();
      $mrbPayment = $paymentMgr->BookingPayment($mrBooking, $payMethod);
      if (isset($mrbPayment)) {
      if ($mrbPayment->hasErrors() === false) {
      //$this->redirect($mrbPayment->getRequestUrl());
      echo CHtml::link($mrbPayment->getRequestUrl(), $mrbPayment->getRequestUrl(), array('target' => '_blank'));
      } else {
      $errors = $mrbPayment->getErrors();
      echo CJSON::encode(array('status' => 'false', 'errors' => $errors));
      }
      } else {
      echo CJSON::encode(array('status' => 'false', 'errors' => array('访问错误')));
      }
      }
      }
      //  $this->render('doPay');
      }
     * 
     */

    public function actionReturn() {

        $paymentMgr = new PaymentManager();
        $payment = $paymentMgr->updateAlipayReturn();
        //$uid = $_GET['out_trade_no'];
        //$payment = $paymentMgr->loadPaymentByUID($uid);

        if ($payment === false || isset($payment) === false) {
            $error = new stdClass();
            $error->code = '';
            $error->msg = '请求链接不正确。';
            $this->render("error", array(
                'error' => $error
            ));
        } else {
            //TODO: redirect to payment/result instead.
            // reload payment from db.
            $payment = $paymentMgr->loadPaymentByUID($payment->getUID(), array('mrbpUser', 'mrbpBooking'));
            $ipayment = new IMrBookingPayment();
            $ipayment->initModel($payment);
            $ipayment->setBuyer($payment->getUser());
            $ipayment->setBooking($payment->getBooking());
            $this->render('return2', array(
                'payment' => $ipayment
            ));
        }
    }

    public function actionNotify() {
        // $paymentMgr = new PaymentManager();
        // $success = $paymentMgr->updateAlipayNotify();
        //$log = CJSON::encode(Yii::app()->request);
        $log = Yii::app()->request->queryString;
        Yii::log($log);
        $success = true;
        if ($success) {
            echo 'success';
        } else {
            echo 'fail';
        }
    }

    public function actionResult($ref) {
        
    }

    public function actionPayBooking($ref) {

        $bookingMgr = new BookingManager();
        $booking = $bookingMgr->loadBookingByRefNo($ref);

        if (isset($_POST['payment'])) {
            $paymentMgr = new PaymentManager();
            $payment = $paymentMgr->BookingPayment($booking, $payMethod);
        }
    }

    public function actionAlipay($bid) {
        $booking = $this->loadBookingById($bid, array('mrbUser', 'mrbMedicalRecord', 'mrbFaculty'));

        if (isset($_POST['payment'])) {
            $post = $_POST['payment'];
            $bookingId = $post['bid'];
            $booking = $this->loadBookingById($bookingId, array('mrbUser', 'mrbMedicalRecord', 'mrbFaculty'));
            $payMethod = 1;

            $paymentMgr = new PaymentManager();
            $payment = $paymentMgr->BookingPayment($booking, $payMethod);
            if (isset($payment)) {
                if ($payment->hasErrors() === false) {
                    $this->redirect($payment->getRequestUrl());
                    echo CHtml::link($payment->getRequestUrl(), $payment->getRequestUrl(), array('target' => '_blank'));
                } else {
                    $errors = $payment->getErrors();
                    echo CJSON::encode(array('status' => 'false', 'errors' => $errors));
                }
            } else {
                echo CJSON::encode(array('status' => 'false', 'errors' => array('访问错误')));
            }
        }
        $this->render('alipay', array(
            'booking' => $booking
        ));
    }

    public function actionTest() {
        if (isset($_POST['payment']['amt'])) {
            $amt = floatval($_POST['payment']['amt']);
            $payMethod = 1;
            $booking = new MedicalRecordBooking();
            $booking->id = 100000;
            $booking->user_id = 3;
            $booking->faculty_id = 1;
            $booking->subject = '测试付款';
            $booking->total_price = $amt;
            $booking->currency = 'RMB';

            $paymentMgr = new PaymentManager();
            $payment = $paymentMgr->BookingPayment($booking, $payMethod);
            if (isset($payment)) {
                if ($payment->hasErrors() === false) {
                    $this->redirect($payment->getRequestUrl());
                    echo CHtml::link($payment->getRequestUrl(), $payment->getRequestUrl(), array('target' => '_blank'));
                } else {
                    $errors = $payment->getErrors();
                    echo CJSON::encode(array('status' => 'false', 'errors' => $errors));
                }
            } else {
                echo CJSON::encode(array('status' => 'false', 'errors' => array('访问错误')));
            }
        }
        $this->render('test');
    }

    public function loadBookingById($id, $with = null) {
        $model = MedicalRecordBooking::model()->getById($id, $with);
        if (is_null($model)) {
            $this->throwPageNotFoundException();
        } else {
            return $model;
        }
    }
	
	public function actionDoPingxxPay($ref_no) {
        require_once('protected/sdk/pingpp-php-master/init.php');
        $output = array('status' => 'no');
        try {
            $post = json_decode(file_get_contents('php://input'), true);
            if (isset($post['ref_no'])) {
                $refNo = $post['ref_no'];
            }
            if (isset($post['channel'])) {
                $channel = strtolower($post['channel']);
            }

            $payMgr = new PayManager();
            $payMgr->doPingxxPay($ref_no, $channel);
        } catch (\Pingpp\Error\Base $e) {
            header('Status: ' . $e->getHttpStatus());
            echo($e->getHttpBody());
        } catch (CDbException $cdbex) {
            $output['errorMsg'] = 'error loading data';
        } catch (CException $cex) {
            $output['errorMsg'] = 'error loading data';
        }
        $this->renderJsonOutput();
    }

    public function actionWebhooksReturn() {
        $post = json_decode(file_get_contents('php://input'), true);
        $payMgr = new PayManager();
        $orderNo = '';
        $payment = SalesPayment::model()->getByAttributes(array('uid' => $orderNo));
        if (isset($payment) && $post->type == 'charge.succeeded') {
            //交易成功
            $payMgr->updateDataAfterTradeSuccess($payment, $post);
        } else if (isset($payment) && $post->type != 'charge.succeeded') {
            //交易失败
            $payMgr->updateDataAfterTradeFail($payment, $post);
        } else if ($payment == NULL) {
            //没有此笔交易
        }
    }

    public function actionSuccess() {
        $post = json_decode(file_get_contents('php://input'), true);
        $orderNo = '';
        //支付宝 支付完成后的跳转
    }
}
